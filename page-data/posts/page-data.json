{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts",
    "result": {"pageContext":{"currentCategory":"All","edges":[{"node":{"id":"4abf88d5-48e1-59ba-bfa5-3a4ae6f1d9e7","excerpt":"SSR의 정의와 설명  단계 User가 Website 요청을 보냄 Server는 ‘Ready to Render’ 즉, 즉시 렌더링 가능한 html 파일을 만든다. 클라이언트에 전달되는 순간, 이미 렌더링 준비가 되어있기 때문에 HTML은 즉시 렌더링 된다. 그러나 사이트 자체는 조작 불가능하다. (JavaScript 가 읽히기 전) 클라이언트가 자바스크립트를 다운받는다. 다운 받아지고 있는 사이에 유저는 컨텐츠는 볼 수 있지만 사이트를 조작 할 수는 없다.\n이때의 사용자 조작을 기억하고 있는다. 브라우저가 JavaScript 프레임워크를 실행한다. JS까지 성공적으로 컴파일 되었기 때문에 기억하고 있던 사용자 조작이 실행되고 이제 웹 페이지는 상호작용 가능해진다. CSR의 정의와 설명 Untitled User가 Website 요청을 보냄 CDN이 HTML 파일과 JS로 접근할 수 있는 링크를 클라이언트로 보낸다. 클라이언트는 HTML과 JS를 다운로드 받는다.\n( 이때 SSR과 달…","fields":{"slug":"/CS/Web/CSR과 SSR b7a4fb3a62d74fd5af381b49ff1328df/"},"frontmatter":{"categories":"CS","title":"(FrontEnd) CSR과 SSR","date":"June 18, 2022"}},"next":{"fields":{"slug":"/CS/Web/"}},"previous":null},{"node":{"id":"7bde9e2e-eac3-583d-ad02-09456e0f3193","excerpt":"로컬저장소 만들기 명령어 설명 git status git 워킹트리의 상태를 보여준다 git status -s git status 명령을 짧게 요약해서 보여준다 git init 현재 폴더에 Git 저장소를 생성한다 Git 저장소 초기화 Initialized empty Git repository 라는 문구가 나오면 성공 위의 명령어를 실행하면 해당 디렉토리에 [.git]이라는 폴더가 자동으로 생성됩니다. 옵션 설정하기 누가 커밋을 했는지 확인 하기 위한 세팅입니다 기본 CLI 명령어 기본적인 git 명령들 CLI로 log 살펴보기 💡 좋은 커밋 메시지의 7가지 규칙 제목과 본문을 빈 줄로 분리한다 제목은 50자 이내로 쓴다 제목을 영어로 쓸 경우 첫 글자는 대문자로 쓴다 제목에는 마침표를 넣지 않는다 제목을 영어로 쓸 경우 동사원형으로 시작한다 본문을 72자 단위로 줄바꿈한다. 어떻게 보다 무엇과 왜를 설명한다. reset 명령어로 언스테이징하기 원격저장소 관련 CLI 명령어 명령어 …","fields":{"slug":"/CS/Web/"},"frontmatter":{"categories":"프레임워크","title":"(Git) Git Bash를 시작해보자","date":"January 16, 2022"}},"next":{"fields":{"slug":"/Framwork/Git/git-and-github/"}},"previous":{"fields":{"slug":"/CS/Web/CSR과 SSR b7a4fb3a62d74fd5af381b49ff1328df/"}}},{"node":{"id":"51d49643-b3f3-51bc-9eeb-5d4fbc15bd79","excerpt":"로컬저장소 만들기 명령어 설명 git status git 워킹트리의 상태를 보여준다 git status -s git status 명령을 짧게 요약해서 보여준다 git init 현재 폴더에 Git 저장소를 생성한다 Git 저장소 초기화 Initialized empty Git repository 라는 문구가 나오면 성공 위의 명령어를 실행하면 해당 디렉토리에 [.git]이라는 폴더가 자동으로 생성됩니다. 옵션 설정하기 누가 커밋을 했는지 확인 하기 위한 세팅입니다 기본 CLI 명령어 기본적인 git 명령들 CLI로 log 살펴보기 💡 좋은 커밋 메시지의 7가지 규칙 제목과 본문을 빈 줄로 분리한다 제목은 50자 이내로 쓴다 제목을 영어로 쓸 경우 첫 글자는 대문자로 쓴다 제목에는 마침표를 넣지 않는다 제목을 영어로 쓸 경우 동사원형으로 시작한다 본문을 72자 단위로 줄바꿈한다. 어떻게 보다 무엇과 왜를 설명한다. reset 명령어로 언스테이징하기 원격저장소 관련 CLI 명령어 명령어 …","fields":{"slug":"/Framwork/Git/git-and-github/"},"frontmatter":{"categories":"프레임워크","title":"(Git) Git Bash를 시작해보자","date":"January 16, 2022"}},"next":{"fields":{"slug":"/Framwork/Git/git-branch/"}},"previous":{"fields":{"slug":"/CS/Web/"}}},{"node":{"id":"3083db55-47cb-5657-ba62-45abc52ade5b","excerpt":"CLI로 브랜치 생성하기 💡 브랜치, 언제 사용하나 새로운 기능 추가 버그 수장 병합과 리베이스 테스트 이전 코드 개선 명령어 설명 git branch [-v] 로컬 저장소의 브랜치 목록을 보는 명령어, -v 옵션으로 마지막 커밋을 확인 git branch [-f] <브랜치이름> [커밋체크섬] 새로운 브랜치를 생성, 커밋체크섬 값이 없으면 HEAD로 부터 브랜치가 생성 이미 있는 브랜치를 다른 브랜치로 옮길려면 -f 옵션을 줘야한다 git branch -r[v] 원격저장소에 있는 브랜치 목록, -v옵션으로 마지막 커밋 확인 git checkout <브랜치이름> 특정 브랜치로 체크아웃 git checkout -b <브랜치이름> <커밋체크섬> 특정 커밋에서 브랜치를 생성하면서 동시에 체크아웃까지 하는 명령어 git merge <대상브랜치> 현재 브랜치와 대상 브랜치를 병합 git rebase <대상브랜치> 내 브랜치의 커밋들을 대상 브랜치에 재배치시킨다 git branch -d <브랜…","fields":{"slug":"/Framwork/Git/git-branch/"},"frontmatter":{"categories":"프레임워크","title":"(Git) 브랜치(Branch)에 관하여","date":"January 16, 2022"}},"next":{"fields":{"slug":"/Retrospection/retrospection-start-blog/"}},"previous":{"fields":{"slug":"/Framwork/Git/git-and-github/"}}},{"node":{"id":"c0e38c96-201f-5160-b3c2-8f98254da50c","excerpt":"🎈내 소개 + 블로그 소개 저는 컴퓨터 전공 졸업자이자 취준생인 양경섭입니다 😀 졸업을 하고 취업을 준비하면서 포트폴리오, 학습 정리 , 회고록 작성을 위해서\r\n블로그를 시작하게되었습니다 개인적으로 보기위한 것이기도하고 누군가에게 보여주기에는 부족하지만 블로그를 하나하나\r\n채워나가면서 개발 기술과 글쓰기 기술의 향상을 기대하고 있습니다. 🎠블로그 시작 jekyll을 이용한 블로그를 이전에 만들어 본 경험이있는데 어려움이 많았어서 결국 제대로 진행하지 못하였습니다\r\n이번에는 새롭게 블로그 방법을 찾아보면서 발견한 줌코딩님이 개발하신 블로그를 가져와서 진행하기로 하였습니다. 🎆블로그에 배움 정리하기 이론적인 학습에 대한 부분이나 프로젝트에 관한 부분이나 제대로 정리해놓지 않으니까 나중에 필요할때 다시 찾아보기가 매우 어려웠습니다\r\n그래서 이 블로그를 통해서 컴퓨터 이론이나, 프로젝트에 대한 정리를 하고자 합니다. 🎇블로그에 회고 남기기 원래 블로그는 개인적인 글을 남기는 플랫폼이라고 …","fields":{"slug":"/Retrospection/retrospection-start-blog/"},"frontmatter":{"categories":"회고","title":"나의 블로그 목표","date":"January 06, 2022"}},"next":null,"previous":{"fields":{"slug":"/Framwork/Git/git-branch/"}}}],"categories":["All","CS","프레임워크","회고"]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}